[["validation.html", "3 Validation 3.1 Validation Set Approach", " 3 Validation We use the brains data set sourced from: https://www.kaggle.com/datasets/anubhabswain/brain-weight-in-humans # Read the data set into R brains &lt;- readr::read_csv( file = &quot;data/brains.csv&quot;, show_col_types = FALSE, col_names = c(&quot;sex&quot;, &quot;age&quot;, &quot;head_volume&quot;, &quot;brain_weight&quot;), skip = 1 ) # Get the sample size n &lt;- nrow(brains) The coding is as follows: sex: 1 = male, 2 = female age: 1 = older than 18 years, 2 = younger than 18 years head_volume: volume of the head in cubic centimeters brain_weight: weight of the brain in grams. 3.1 Validation Set Approach The complete set of observations is randomly split into two parts: a training set and a validation set (test set, hold-out set). The model is fit to the training set and the performance of the model is assessed using the validation set. More specifically, the validation set is used to estimate the test error rate. For this, we calculate the mean squared error: \\[ MSE = E(Y_i - \\hat{Y_i}) = \\frac{1}{n} \\sum_{i = 1}^{n}(Y_i - \\hat{Y_i}) \\] We start by randomly splitting the data set into two parts. Approximately 80% of the observations are used as training observations, and the other 20% are used as test observations. # Randomly split the data set into a training set (80%) and a test set (20%) set.seed(123) trn &lt;- sample(n, round(0.80*n)) tst &lt;- (1:n)[-trn] # Fit the model to the training set fit &lt;- glm( formula = brain_weight ~ head_volume, data = brains, subset = trn ) ## ## Call: ## glm(formula = brain_weight ~ head_volume, data = brains, subset = trn) ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 329.06934 49.82949 6.604 3.99e-10 *** ## head_volume 0.26237 0.01359 19.302 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 4712.825) ## ## Null deviance: 2641859 on 189 degrees of freedom ## Residual deviance: 886011 on 188 degrees of freedom ## AIC: 2150.2 ## ## Number of Fisher Scoring iterations: 2 We calculate the MSE using the test observations as an estimate of the test error rate. # Calculate the mean squared error using the observations from the test set obs_brain_weight &lt;- brains$brain_weight prd_brain_weight &lt;- predict(fit, brains) prd_errors &lt;- (obs_brain_weight - prd_brain_weight)[tst] test_error &lt;- mean(prd_errors**2) test_error ## [1] 7378.298 3.1.1 Variability of MSE Note that the creation of a training set and a test set is a random process, and therefore the estimate of the test error is also a random measure. If we use another split of the data set, we obtain a different estimate of the test error. # Randomly split the data set into a training set (80%) and a test set (20%) set.seed(456) trn &lt;- sample(n, round(0.80*n)) tst &lt;- (1:n)[-trn] # Fit the model to the training set fit &lt;- glm( formula = brain_weight ~ head_volume, data = brains, subset = trn ) # Calculate the mean squared error using the observations from the test set obs_brain_weight &lt;- brains$brain_weight prd_brain_weight &lt;- predict(fit, brains) prd_errors &lt;- (obs_brain_weight - prd_brain_weight)[tst] test_error &lt;- mean(prd_errors**2) test_error ## [1] 6837.111 To assess the variability of the test error estimates, we repeatedly split the set of observations into a training set and a test set and compute the MSE. # Repeatedly calculate the test error estimate on random splits of the data set.seed(123) sim_size &lt;- 1000 test_errors &lt;- rep(NA, times = sim_size) for (i in 1:sim_size) { # Randomly split the data set into a training set (80%) and a test set (20%) trn &lt;- sample(n, round(0.80*n)) tst &lt;- (1:n)[-trn] # Fit the model to the training set fit &lt;- glm( formula = brain_weight ~ head_volume, data = brains, subset = trn ) # Calculate the mean squared error using the observations from the test set obs_brain_weight &lt;- brains$brain_weight prd_brain_weight &lt;- predict(fit, brains) prd_errors &lt;- (obs_brain_weight - prd_brain_weight)[tst] test_errors[i] &lt;- mean(prd_errors**2) } We see that there is quite some variability in the test error estimates, where they range from 2176.14 to 8905.89. This is a serious drawback of the validation set approach, and therefore it is recommended to use other methods to assess the performance of a model. 3.1.2 Training Set Size A second drawback is that not all observations are used to fit the model. The less observations are used to fit a model, the worse the performance of a model. We illustrate this by, again, repeatedly creating training sets and fitting the model. But now, we will gradually increase the size of the training set and investigate how the size of the training set impacts the variability (uncertainty) of the test error estimates. # Initialize a seed for reproducibility set.seed(123) # Randomly take 20% of the observations as test observations. These same test # observations will be used for every simulation in this code chunk. tst &lt;- sample(n, round(0.20*n)) tst_observations &lt;- brains[tst, ] trn_observations &lt;- brains[-tst, ] trn_sizes &lt;- seq(from = 0.1, to = 0.9, by = 0.1) sim_size &lt;- 1000 for (trn_size in trn_sizes) { test_errors &lt;- rep(NA, times = sim_size) for (i in 1:sim_size) { # Randomly select observations as training observations trn &lt;- sample( nrow(trn_observations), round(trn_size*nrow(trn_observations)) ) # Fit the model to the training set fit &lt;- glm( formula = brain_weight ~ head_volume, data = trn_observations, subset = trn ) # Calculate the mean squared error using the observations from the test set obs_brain_weight &lt;- tst_observations$brain_weight prd_brain_weight &lt;- predict(fit, tst_observations) prd_errors &lt;- (obs_brain_weight - prd_brain_weight) test_errors[i] &lt;- mean(prd_errors**2) } test_error_range &lt;- max(test_errors) - min(test_errors) print(paste0(&quot;Range : &quot;, round(test_error_range, 2))) hist( test_errors, main = paste0(&quot;Distribution of Test Error Estimates (&quot;, trn_size, &quot;)&quot;), xlab = &quot;Test error estimate&quot;, ylab = &quot;Count&quot; ) } ## [1] &quot;Range : 10166.31&quot; ## [1] &quot;Range : 5161.19&quot; ## [1] &quot;Range : 2912.03&quot; ## [1] &quot;Range : 2952.36&quot; ## [1] &quot;Range : 2104.9&quot; ## [1] &quot;Range : 1806.83&quot; ## [1] &quot;Range : 1757.41&quot; ## [1] &quot;Range : 957.38&quot; ## [1] &quot;Range : 690.75&quot; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
